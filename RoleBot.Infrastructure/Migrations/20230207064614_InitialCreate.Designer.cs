// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoleBot.Infrastructure;
using RoleBot.Infrastructure.Enums;

#nullable disable

namespace RoleBot.Infrastructure.Migrations
{
    [DbContext(typeof(RoleBotDbContext))]
    [Migration("20230207064614_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "category_displayorder_enum", new[] { "0", "1", "2", "3" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "guild_config_reacttype_enum", new[] { "0", "1", "2" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoleBot.Infrastructure.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<DisplayOrder>("DisplayOrder")
                        .HasColumnType("category_displayorder_enum")
                        .HasColumnName("displayOrder");

                    b.Property<string>("ExcludedRoleId")
                        .HasColumnType("text")
                        .HasColumnName("excludedRoleId");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("guildId");

                    b.Property<bool>("MutuallyExclusive")
                        .HasColumnType("boolean")
                        .HasColumnName("mutuallyExclusive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("name");

                    b.Property<string>("RequiredRoleId")
                        .HasColumnType("text")
                        .HasColumnName("requiredRoleId");

                    b.HasKey("Id");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("RoleBot.Infrastructure.Entities.GuildConfig", b =>
                {
                    b.Property<string>("GuildId")
                        .HasColumnType("text")
                        .HasColumnName("guildId");

                    b.Property<bool>("HideEmojis")
                        .HasColumnType("boolean")
                        .HasColumnName("hideEmojis");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<GuildReactType>("ReactType")
                        .HasColumnType("guild_config_reacttype_enum")
                        .HasColumnName("reactType");

                    b.HasKey("GuildId");

                    b.ToTable("guild_config", (string)null);
                });

            modelBuilder.Entity("RoleBot.Infrastructure.Entities.ReactRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CategoryAddDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("categoryAddDate");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("categoryId");

                    b.Property<string>("EmojiId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("emojiId");

                    b.Property<string>("EmojiTag")
                        .HasColumnType("text")
                        .HasColumnName("emojiTag");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("guildId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("guildId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("react_role", (string)null);
                });

            modelBuilder.Entity("RoleBot.Infrastructure.Entities.ReactRole", b =>
                {
                    b.HasOne("RoleBot.Infrastructure.Entities.Category", "Category")
                        .WithMany("ReactRoles")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RoleBot.Infrastructure.Entities.Category", b =>
                {
                    b.Navigation("ReactRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
